group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
#This chunk is to join the blocks within East Palo Alto and then subtract the 2020 population from 2010 to get the absolute difference but then I convert to a population density, in this case, people per acre in order to show population density change as to account for the distribution of population in a block
projection <-  "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
SJ_pop_2010_2020 <- SJ_blocks_2010 %>%
left_join(SJ_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2010-pop_2020) / as.numeric(st_area(.)) * 5280^2 *0.0015625)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(SJ_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max, max)
)
#building a map of the density change
leaflet(SJ_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(devtools)
install_github('walkerke/tigris')
library(tigris)
library(tidyverse)
library(tigris) #repository of census geographies
library(sf) #spatial
library(mapview) #easiest map tool
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="cccdf64b447748daaddebe5f9aeaec92fc4b744c")
#Getting 2020 shapefiles for Santa Clara County FIPS codes as well as the American Indian/Alaska Native population data field
dec_vars_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
SMC_pop_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "P1_005N"
) %>%
transmute(
GEOID20 =  paste0(state,county,tract,block),
pop_2020 = P1_005N
)
blocks_2020 <- blocks("CA", "San Mateo County", year = 2020, progress_bar = F)
#doing the same as above but for 2010
dec_vars_2010 <-
listCensusMetadata(
name = "2010/dec/pl",
type = "variables"
)
SMC_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001005"
) %>%
transmute(
GEOID10 = paste0(state,county,tract,block),
pop_2010 = P001005
)
blocks_2010 <- blocks("CA", "San Mateo County", year = 2010, progress_bar = F)
#saving since running took a while
saveRDS(dec_vars_2010, "dev_vars_2010.rds")
#saving since that took a while
saveRDS(dec_vars_2020, "dev_vars_2020.rds")
#Using the centroid approach to figure out which 2010 blocks are within the place I've chosen in San Mateo County: East Palo Alto
HMB_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Half Moon Bay")
HMB_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[HMB_boundary,] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(SCC_pop_2010)
mapview(HMB_boundary) + mapview(HMB_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
#using the subsetting approach to find intersection of 2020 and 2010 blocks
HMB_blocks_2020 <- blocks_2020 %>%
.[HMB_boundary, ] %>%
select(GEOID20) %>%
left_join(SMC_pop_2020)
#using the Ch2.4 technique to get into the same coordinate system and trim the block parts that do not overlap and also find the percent overlap
HMB_blocks_2020_intersect <- HMB_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
HMB_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric(leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
#We need to get the 2020 population counts within the block boundaries (GEOID10)
HMB_blocks_2020_reshaped <- HMB_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
#This chunk is to join the blocks within East Palo Alto and then subtract the 2020 population from 2010 to get the absolute difference but then I convert to a population density, in this case, people per acre in order to show population density change as to account for the distribution of population in a block
projection <-  "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
HMB_pop_2010_2020 <- HMB_blocks_2010 %>%
left_join(HMB_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2010-pop_2020) / as.numeric(st_area(.)) * 5280^2 *0.0015625)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max, max)
)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max, max)
)
View(HMB_pop_2010_2020)
View(HMB_blocks_2010)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(devtools)
install_github('walkerke/tigris')
library(tigris)
library(tidyverse)
library(tigris) #repository of census geographies
library(sf) #spatial
library(mapview) #easiest map tool
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="cccdf64b447748daaddebe5f9aeaec92fc4b744c")
#Getting 2020 shapefiles for Santa Clara County FIPS codes as well as the American Indian/Alaska Native population data field
dec_vars_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
SMC_pop_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "P1_005N"
) %>%
transmute(
GEOID20 =  paste0(state,county,tract,block),
pop_2020 = P1_005N
)
blocks_2020 <- blocks("CA", "San Mateo County", year = 2020, progress_bar = F)
#doing the same as above but for 2010
dec_vars_2010 <-
listCensusMetadata(
name = "2010/dec/pl",
type = "variables"
)
SMC_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001005"
) %>%
transmute(
GEOID10 = paste0(state,county,tract,block),
pop_2010 = P001005
)
blocks_2010 <- blocks("CA", "San Mateo County", year = 2010, progress_bar = F)
#saving since running took a while
saveRDS(dec_vars_2010, "dev_vars_2010.rds")
#saving since that took a while
saveRDS(dec_vars_2020, "dev_vars_2020.rds")
#Using the centroid approach to figure out which 2010 blocks are within the place I've chosen in San Mateo County: East Palo Alto
HMB_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Half Moon Bay")
HMB_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[HMB_boundary,] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(SMC_pop_2010)
mapview(HMB_boundary) + mapview(HMB_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
#using the subsetting approach to find intersection of 2020 and 2010 blocks
HMB_blocks_2020 <- blocks_2020 %>%
.[HMB_boundary, ] %>%
select(GEOID20) %>%
left_join(SMC_pop_2020)
#using the Ch2.4 technique to get into the same coordinate system and trim the block parts that do not overlap and also find the percent overlap
HMB_blocks_2020_intersect <- HMB_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
HMB_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric(leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
#We need to get the 2020 population counts within the block boundaries (GEOID10)
HMB_blocks_2020_reshaped <- HMB_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
#This chunk is to join the blocks within East Palo Alto and then subtract the 2020 population from 2010 to get the absolute difference but then I convert to a population density, in this case, people per acre in order to show population density change as to account for the distribution of population in a block
projection <-  "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
HMB_pop_2010_2020 <- HMB_blocks_2010 %>%
left_join(HMB_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2010-pop_2020) / as.numeric(st_area(.)) * 5280^2 *0.0015625)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max, max)
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "black",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "grey",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "BuGN",
domain = c(-max, max)
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "grey",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "GnBU",
domain = c(-max, max)
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYg",
domain = c(-max, max)
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(devtools)
install_github('walkerke/tigris')
library(tigris)
library(tidyverse)
library(tigris) #repository of census geographies
library(sf) #spatial
library(mapview) #easiest map tool
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="cccdf64b447748daaddebe5f9aeaec92fc4b744c")
#Getting 2020 shapefiles for Santa Clara County FIPS codes as well as the American Indian/Alaska Native population data field
dec_vars_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
SMC_pop_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:081",
vars = "P1_005N"
) %>%
transmute(
GEOID20 =  paste0(state,county,tract,block),
pop_2020 = P1_005N
)
blocks_2020 <- blocks("CA", "San Mateo County", year = 2020, progress_bar = F)
#doing the same as above but for 2010
dec_vars_2010 <-
listCensusMetadata(
name = "2010/dec/pl",
type = "variables"
)
SMC_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001005"
) %>%
transmute(
GEOID10 = paste0(state,county,tract,block),
pop_2010 = P001005
)
blocks_2010 <- blocks("CA", "San Mateo County", year = 2010, progress_bar = F)
#saving since running took a while
saveRDS(dec_vars_2010, "dev_vars_2010.rds")
#saving since that took a while
saveRDS(dec_vars_2020, "dev_vars_2020.rds")
#Using the centroid approach to figure out which 2010 blocks are within the place I've chosen in San Mateo County: East Palo Alto
HMB_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Half Moon Bay")
HMB_blocks_2010 <- blocks_2010 %>%
st_centroid() %>%
.[HMB_boundary,] %>%
st_drop_geometry() %>%
left_join(blocks_2010 %>% select(GEOID10)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(SMC_pop_2010)
mapview(HMB_boundary) + mapview(HMB_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
#using the subsetting approach to find intersection of 2020 and 2010 blocks
HMB_blocks_2020 <- blocks_2020 %>%
.[HMB_boundary, ] %>%
select(GEOID20) %>%
left_join(SMC_pop_2020)
#using the Ch2.4 technique to get into the same coordinate system and trim the block parts that do not overlap and also find the percent overlap
HMB_blocks_2020_intersect <- HMB_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
HMB_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric(leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
#We need to get the 2020 population counts within the block boundaries (GEOID10)
HMB_blocks_2020_reshaped <- HMB_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
#This chunk is to join the blocks within East Palo Alto and then subtract the 2020 population from 2010 to get the absolute difference but then I convert to a population density, in this case, people per acre in order to show population density change as to account for the distribution of population in a block
projection <-  "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
HMB_pop_2010_2020 <- HMB_blocks_2010 %>%
left_join(HMB_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2010-pop_2020) / as.numeric(st_area(.)) * 5280^2 *0.0015625)
#Picked the color pallet that was as gradient symmetric about the white shade like the SF chronicle example
max <- max(abs(HMB_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYg",
domain = c(-max, max)
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
#building a map of the density change
leaflet(HMB_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "East Palo Alto Native American and Alaska Native Population <br> Density Change (people per acre) <br> from 2010 to 2020"
)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/GitHub/roconnor17.github.io/roconnor17.github.io/Assignment 2")
