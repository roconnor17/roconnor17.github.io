ces4_bay_joined <- colnames(
c("Census Tract",
"Asthma",
"PM2.5"))
ces4_bay_joined <- st_join(
ces4_bay_asthma,
ces4_bay_pm25,
join = st_intersects
) %>%
select(c("Census Tract.x","Asthma","PM2.5"))
colnames(ces4_bay_joined) <-
c("Census Tract",
"Asthma",
"PM2.5")
ces4_bay_joined <- st_join(
ces4_bay_asthma,
ces4_bay_pm25,
join = st_intersects
) %>%
select(c("Census Tract.x","Asthma","PM2.5"))
colnames(ces4_bay_joined) <-
c("Census Tract",
"Asthma",
"PM2.5")
View(ces4_bay_joined)
colnames(ces4_bay_joined) <-
c("Census Tract",
"Asthma",
"PM2.5",
"geometry")
)
ggplot() +
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = Asthma,
y = PM2.5
)
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = Asthma,
y = PM2.5
))
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = Asthma,
y = PM2.5
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = Asthma,
y = PM2.5
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = PM2.5,
y = Asthma
)
)
ggplot(
data = ces4_bay_joined,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
slope <- optimization$par[1]
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
optimization <- optim(c(0,0), get_sumsq_residuals)
optimization <- optim(c(0,0), get_sumsq_residuals)
slope <- 0
yintercept <- mean(ces4_bay_joined$Asthma)
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
yintercept <- mean(ces4_bay_joined$Asthma)
mean(ces4_bay_joined$Asthma)
class(ces4_bay_joined$Asthma)
summary(ces4_bay_joined$Asthma)
?mean()
yintercept <- mean(ces4_bay_joined$Asthma, na.rm = TRUE)
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
sumsq_residuals <- sum(residuals^2, na.rm = TRUE)
sumsq_residuals
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
optimization <- optim(c(0,0), get_sumsq_residuals)
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2, na.rm = TRUE)
}
optimization <- optim(c(0,0), get_sumsq_residuals)
optimization
ggplot(
data = ces4_bay_joined,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(
aes(
x = PM2.5,
y = PM2.5 * optimization$par[1] + optimization$par[2]
),
color = "red",
linetype = 2,
size = 2
)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
mean(residuals)
mean(residuals, na.rm = TRUE)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
mean(residuals, na.rm = TRUE)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
mean(residuals, na.rm = TRUE)
plot(density(residuals))
plot(density(residuals, na.rm = TRUE))
ces_asthma_pal <- colorNumeric(
palette = "Blues",
domain = ces4_bay_asthma$Asthma)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma by Census Tract"
ces_asthma_pal <- colorNumeric(
ces_asthma_pal <- colorNumeric(
palette = "Blues",
domain = ces4_bay_asthma$Asthma)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma by Census Tract")
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.1,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma by Census Tract")
ces_asthma_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_asthma$Asthma)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.1,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma by Census Tract")
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma by Census Tract")
View(ces4_bay_pm25)
View(ces4_bay_pm25)
ces_PM2.5_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_pm25$PM2.5)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_pm25,
fillColor = ~ces_PM2.5_pal(PM2.5),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(PM2.5),
"PPM2.5 Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_pm25,
pal = ces_PM2.5_pal,
values = ~PM2.5,
title = "Bay Area PM2.5 by Census Tract")
ces_PM2.5_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_pm25$PM2.5)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_pm25,
fillColor = ~ces_PM2.5_pal(PM2.5),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(PM2.5),
"PPM2.5 Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_pm25,
pal = ces_PM2.5_pal,
values = ~PM2.5,
title = "Bay Area PM2.5 Annual Mean Concentration<br>by Census Tract")
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_pm25,
fillColor = ~ces_PM2.5_pal(PM2.5),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(PM2.5),
"PPM2.5 Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_pm25,
pal = ces_PM2.5_pal,
values = ~PM2.5,
title = "Bay Area PM2.5 Annual Mean<br>Concentration by Census Tract")
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma ED Visits Per<br>10,000 persons by Census Tract")
ggplot() +
geom_point(
data = ces4_bay_joined,
aes(
x = PM2.5,
y = Asthma
)
)
ggplot(
data = ces4_bay_joined,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(PM2.5 ~ Asthma, ces4_bay_joined)
summary(model)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * ces4_bay_joined$PM2.5 + yintercept
residuals <- ces4_bay_joined$Asthma - best_fit_candidate
mean(residuals, na.rm = TRUE)
ces_PM2.5_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_pm25$PM2.5)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_pm25,
fillColor = ~ces_PM2.5_pal(PM2.5),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(PM2.5),
"PPM2.5 Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_pm25,
pal = ces_PM2.5_pal,
values = ~PM2.5,
title = "Bay Area PM2.5 Annual Mean<br>Concentration by Census Tract")
library(tidyverse)
library(censusapi)
library(sf)
library(mapview)
library(tigris)
library(readxl)
Sys.setenv(CENSUS_KEY="cccdf64b447748daaddebe5f9aeaec92fc4b744c")
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
ces4 <- read_excel("CalEnviroScreen_4.0Excel_ADA_D1_2021.xlsx")
ca_tracts <- tracts("CA", cb = T, progress_bar = F)
ces4_bay_pm25 <-
ces4 %>%
filter(`California County` %in% bay_county_names) %>%
select(`Census Tract`, PM2.5) %>%
left_join(
ca_tracts %>%
transmute(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
mapview(ces4_bay_pm25, zcol = "PM2.5")
ces4_bay_asthma <-
ces4 %>%
filter(`California County` %in% bay_county_names) %>%
select(`Census Tract`, Asthma) %>%
left_join(
ca_tracts %>%
transmute(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
ces_asthma_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_asthma$Asthma)
leaflet() %>%
addTiles() %>%
addPolygons(
data = ces4_bay_asthma,
fillColor = ~ces_asthma_pal(Asthma),
color = "white",
opacity = 0.8,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(Asthma),
"Asthma Rates"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_bay_asthma,
pal = ces_asthma_pal,
values = ~Asthma,
title = "Bay Area Asthma ED Visits Per<br>10,000 persons by Census Tract")
